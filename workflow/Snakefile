# Snakefile

# Config file
configfile: "config/config.yaml"

input_file = config["input_file"]
import os
os.system(f"pwd; ls {input_file}")
project_name = config["project_name"]
metrics = config["metrics"]

run_clusterprofiler = config["run_clusterprofiler"]
run_gseapy = config["run_gseapy"]

# Define result paths based on project name
gseGO = "results/{project_name}/syn.gseGO.{metric}.{project_name}.csv"
gseKEGG = "results/{project_name}/syn.gseKEGG.{metric}.{project_name}.csv"
gseapy_output = "results/{project_name}/syn.gseapy.{metric}.{project_name}.csv"
combined_output = "results/{project_name}/syn.combined.{project_name}.csv"

# Define the final target files based on the method selected
rule all:
    input:
        [
            path for path in [
                expand(gseGO, metric=metrics, project_name=project_name) if run_clusterprofiler else None,
                expand(gseKEGG, metric=metrics, project_name=project_name) if run_clusterprofiler else None#,
                #expand(gseapy_output, metric=metrics, project_name=project_name) if run_gseapy else None
            ]
            if path  # Filter out None values
        ]

# # Rule for running GSEApy
# rule run_gseapy:
#     input:
#         input_file,
#         savepath
#     output:
#         gseapy_output
#     conda:
#         "envs/environment.yaml"
#     shell:
#         """
#         python workflow/scripts/run_gseapy.py {input[0]} {input[1]}
#         """

# Rule for running ClusterProfiler
rule run_clusterprofiler:
    input:
        input_file
    output:
        go = gseGO,
        kegg = gseKEGG
    conda:
        "envs/environment.clusterprofiler.yaml"
    shell:
        """
        Rscript workflow/scripts/run_clusterprofiler.R {input} {output.go} {output.kegg} {wildcards.metric}
        """

# Rule to combine results
rule combine_results:
    input:
        clusterprofiler = gseGO,
        gseapy = gseapy_output
    output:
        combined_output
    conda:
        "envs/environment.yaml"
    shell:
        """
        python workflow/scripts/combine_results.py {input.clusterprofiler} {input.gseapy} {output}
        """